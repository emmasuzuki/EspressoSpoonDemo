buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    }

    dependencies {
        classpath 'com.jaredsburrows:gradle-spoon-plugin:1.5.1'
    }

}

apply plugin: 'com.android.application'
apply plugin: 'com.jaredsburrows.spoon'

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}


dependencies {
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.2-alpha01'
    androidTestImplementation 'com.squareup.spoon:spoon-client:2.0.0-SNAPSHOT'
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.emmasuzuki.espressospoon"
        minSdkVersion 18
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

spoon {
    debug = true
    baseOutputDir = file("$buildDir/custom-report-dir")
    adbTimeout = 30
    grantAllPermissions = true
    shard = true

    if (project.hasProperty("TestGroup")) {
        if (project.TestGroup == "Sanity") {
            instrumentationArgs = ["notAnnotation=com.emmasuzuki.espressospoondemo.utils.annotations.Failure"]
        } else {
            instrumentationArgs = ["annotation=com.emmasuzuki.espressospoondemo.utils.annotations." + project.TestGroup]
        }
    }

    if (project.hasProperty("Devices")) {
        devices = project.Devices.split(",")
    }


}

